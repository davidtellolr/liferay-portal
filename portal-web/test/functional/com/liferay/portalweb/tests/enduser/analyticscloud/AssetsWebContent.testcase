@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.enabled = "true";
	property minimum.slave.ram = "32";
	property portal.release = "false";
	property portal.upstream = "true";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();

		ACUtils.addSiteAndPage();

		ACUtils.createWCAndAddToPage();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8130 | Test Summary: Click a web content in the web content list navigates to the web content overview page"
	@priority = "5"
	test CanNavigateToWebContentOverviewPage {
		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		for (var n : list "1,2,3") {
			Navigator.gotoSitePage(
				pageName = "AC Page",
				siteName = "Site Name");
		}

		ACUtils.closeAllSessions();

		Pause(locator1 = "30000");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToAssets();

		ACNavigation.switchTab(tabName = "Web Content");

		ACTimeFilter.clickTimeFilterButton();

		ACTimeFilter.setLast24Hours();

		ACNavigation.openItem(itemName = "Web Content AC Title");

		ACIndividualsDashboard.goToOverviewTab();

		ACNavigation.viewActiveSwitchTab(tabName = "Overview");

		for (var cardTitle : list "Visitors Behavior,Audience,Views by Location,Views by Technology,Asset Appears On") {
			ACCards.viewCards(cardTitle = "${cardTitle}");
		}

		ACAssets.viewVisitorsBehaviorMetric(
			metricTitle = "Views",
			metricValue = "3");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8131 | Test Summary: Web content known individuals shows which individuals interact with the web content"
	@priority = "5"
	test KnownIndividualsShowsWhichIndividualsInteractWithWebContent {
		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		for (var name : list "ac,liferay,dxp") {
			JSONUser.addUser(
				userEmailAddress = "${name}@liferay.com",
				userFirstName = "${name}",
				userLastName = "${name}",
				userScreenName = "${name}");
		}

		ACDXPSettings.syncNewContactData();

		for (var name : list "ac,liferay,dxp") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "${name}@liferay.com",
				userLoginFullName = "${name} ${name}");

			Navigator.gotoSitePage(
				pageName = "AC Page",
				siteName = "Site Name");

			Pause(locator1 = "5000");
		}

		JSONUser.addUser(
			userEmailAddress = "userac@liferay.com",
			userFirstName = "userac",
			userLastName = "userac",
			userScreenName = "userac");

		User.logoutAndLoginPG(
			userEmailAddress = "userac@liferay.com",
			userFirstName = "userac",
			userLastName = "userac",
			userScreenName = "userac");

		Navigator.gotoSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessions();

		Pause(locator1 = "30000");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToAssets();

		ACNavigation.switchTab(tabName = "Web Content");

		ACTimeFilter.clickTimeFilterButton();

		ACTimeFilter.setLast24Hours();

		ACNavigation.openItem(itemName = "Web Content AC Title");

		ACIndividualsDashboard.goToKnownIndividualsTab();

		ACNavigation.viewActiveSwitchTab(tabName = "Known Individuals");

		ACTimeFilter.clickTimeFilterButton();

		ACTimeFilter.setLast24Hours();

		for (var name : list "ac,liferay,dxp") {
			AssertElementPresent(
				key_userName = "${name} ${name}",
				locator1 = "ACSegments#SEGMENT_MEMBERS");
		}

		AssertElementNotPresent(
			key_userName = "userac userac",
			locator1 = "ACSegments#SEGMENT_MEMBERS");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8125 | Test Summary: Web content list shows all web content in a list"
	@priority = "5"
	test ViewAllWebContentShownInAssetList {
		for (var layoutName : list "AC Page 2,AC Page 3") {
			ACUtils.addSiteAndPage(layoutName = "${layoutName}");
		}

		for (var n : list "2,3") {
			ACUtils.createWCAndAddToPage(
				layoutName = "AC Page ${n}",
				webContentTitle = "Web Content AC Title ${n}");
		}

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		for (var pageName : list "AC Page,AC Page 2,AC Page 3") {
			Navigator.gotoSitePage(
				pageName = "${pageName}",
				siteName = "Site Name");
		}

		ACUtils.closeAllSessions();

		Pause(locator1 = "30000");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToAssets();

		ACNavigation.switchTab(tabName = "Web Content");

		ACTimeFilter.clickTimeFilterButton();

		ACTimeFilter.setLast24Hours();

		for (var assetName : list "Web Content AC Title,Web Content AC Title 2,Web Content AC Title 3") {
			ACAssets.viewAssets(assetName = "${assetName}");
		}
	}

	@description = "Web content visitor behavior card shows expected amount of views"
	@priority = "5"
	test VisitorBehaviorCardShowsExpectedAmountOfViewsInWC {
		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		for (var n : list "1,2,3,4") {
			Navigator.gotoSitePage(
				pageName = "AC Page",
				siteName = "Site Name");
		}

		ACUtils.closeAllSessions();

		Pause(locator1 = "30000");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToAssets();

		ACNavigation.switchTab(tabName = "Web Content");

		ACTimeFilter.clickTimeFilterButton();

		ACTimeFilter.setLast24Hours();

		ACNavigation.openItem(itemName = "Web Content AC Title");

		ACAssets.viewVisitorsBehaviorMetric(
			metricTitle = "Views",
			metricValue = "4");
	}

}